#!/usr/bin/env python
# Requires python 3.8+

import itertools


ALPHA = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ{}_ #"
m = len(ALPHA)


def encrypt(plaintext, a, b):
    ciphertext = ''
    for letter in plaintext:
        i = ALPHA.index(letter)
        c = (a*i + b) % m
        ciphertext += ALPHA[c]
    return ciphertext


def decrypt(ciphertext, a, b):
    plaintext = ''
    inv = pow(a, -1, m)
    for letter in ciphertext:
        i = ALPHA.index(letter)
        p = ((i - b) * inv) % m
        plaintext += ALPHA[p]
    return plaintext


def main():
    ciphertext = open("flag.enc.txt").read().replace('\n', '')
    print('Ciphertext: {}'.format(ciphertext))
    possible_decrypts = []
    for a, b in itertools.product(range(1, m), range(1, m)):
        plaintext = decrypt(ciphertext, a, b)
        print('Key ({}, {}): {}'.format(a, b, plaintext))
        if 'flag' in plaintext.lower():
            possible_decrypts.append((a, b, plaintext))

    print("\nPossible Decryptions:\n")
    for a, b, plaintext in possible_decrypts:
        print('Key ({}, {}): {}'.format(a, b, plaintext))


if __name__ == '__main__':
    main()
